{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\A638127\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\axes\\_axes.py:6462: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\n",
      "  warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\n",
      "C:\\Users\\A638127\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\axes\\_axes.py:6462: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\n",
      "  warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x9dd52b0>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd  # data handeling\n",
    "import numpy as np   # numeriacal computing\n",
    "import matplotlib.pyplot as plt  # plotting core\n",
    "import seaborn as sns  # higher level plotting tools\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "pd.set_option('display.float_format', lambda x: '%.2f' % x)\n",
    "pd.set_option('display.max_columns', 21)\n",
    "pd.set_option('display.max_rows', 70)\n",
    "\n",
    "df = pd.read_csv(\"kc_house_data.csv\")  # create a dataframe with pandas \"pd\"\n",
    "\n",
    "df.head()  # display the first few lines of the dataframe \"df\"\n",
    "\n",
    "df.isnull().values.any()  # check for missing values\n",
    "\n",
    "#df[[\"price\",\"bedrooms\",\"bathrooms\",\"sqft_living\",\"sqft_lot\",\"sqft_above\",\"yr_built\",\"sqft_living15\",\"sqft_lot15\"]].describe()\n",
    "\n",
    "#sns.pairplot(data=df, x_vars=['sqft_living','sqft_lot','sqft_above','sqft_living15','sqft_lot15'], y_vars=[\"price\"])\n",
    "\n",
    "df2 = df[[\"price\", \"sqft_living\"]]\n",
    "df2.head()\n",
    "\n",
    "#sns.jointplot('sqft_living','price', data=df2, size=10, alpha=.5, marker='+')\n",
    "#df.groupby(['zipcode'])['price'].mean()\n",
    "\n",
    "zip98103 = df['zipcode'] == 98103  # True if zip is 98103\n",
    "zip98039 = df['zipcode'] == 98039\n",
    "\n",
    "#sns.jointplot('sqft_living','price', data=df2[zip98103], size=10, alpha=.5, marker='+')\n",
    "\n",
    "#sns.jointplot('sqft_living','price', data=df2[zip98039], size=10, alpha=.5, marker='+')\n",
    "\n",
    "sns.jointplot('sqft_living','price', data=df2[(df['bedrooms']==3) & (df['zipcode'] == 98103)], size=10, alpha=.5, marker='+')\n",
    "\n",
    "#plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
